@page "/login"
@inject NavigationManager Navigation
@inject HttpClient Http
@inject IJSRuntime JSRuntime
@using System.Net.Http.Headers
@using System.Text.Json
@using PruebaProyecto.Models.AGE.Authenticate

<h3>Iniciar sesión</h3>

<EditForm Model="@loginModel" OnValidSubmit="HandleLogin">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="username">Nombre de usuario</label>
        <InputText id="username" class="form-control" @bind-Value="loginModel.Username" />
    </div>

    <div class="form-group">
        <label for="password">Contraseña</label>
        <InputText id="password" type="password" class="form-control" @bind-Value="loginModel.Password" />
    </div>

    <button type="submit" class="btn btn-primary">Iniciar sesión</button>
</EditForm>

@code {
    private LoginModel loginModel = new LoginModel();

    private async Task HandleLogin()
    {
        var loginRequest = new
        {
            Username = loginModel.Username,
            Password = loginModel.Password
        };                         

        var response = await Http.PostAsJsonAsync("https://localhost:5222/api/Login", loginRequest);

        if (response.IsSuccessStatusCode)
        {
            var loginResponse = await response.Content.ReadFromJsonAsync<UsuariosLoginResponse>();

            if (loginResponse != null)
            {
                await JSRuntime.InvokeVoidAsync("localStorage.setItem", "jwt_token", loginResponse.Token);
                Navigation.NavigateTo("/parametros");
            }
        }

        else
        {
            // Mostrar mensaje de error
            var errorMessage = await response.Content.ReadAsStringAsync();
            Console.WriteLine($"Error: {errorMessage}");
        }
    }

    public class LoginModel
    {
        public string Username { get; set; }
        public string Password { get; set; }
    }
}
