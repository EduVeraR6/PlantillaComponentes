@page "/"
@using PlantillaComponents.Components.Button
@using PlantillaComponents.Components.CardSelectableGroup
@using PlantillaComponents.Components.CheckboxField
@using PlantillaComponents.Components.DatePickerField
@using PlantillaComponents.Components.DropDownField
@using PlantillaComponents.Components.NumberField
@using PlantillaComponents.Components.QueryTable
@using PlantillaComponents.Components.Table
@using PlantillaComponents.Components.ThemeToggle
@using System.ComponentModel.DataAnnotations
@using PlantillaComponents.Models
@using static PlantillaComponents.Components.DropDownField.DropDownField

<div>
    <ThemeToggle />


    <!--

    <QueryTable TItem="Cliente"
    Title="Lista de Clientes"
    Items="@clientes"
    PageSize="5"
    OnDeleteMassiveAction="EliminarSeleccionados"
    Searchable="true"
    Sortable="true"
    StatusAccessor="Estado"
    NotFoundLabel="No se encontraron clientes."
    Loading="@loading"
    OnSelectAction="HandleSelectAction"
    OnDeleteAction="HandleDeleteAction"
    OnNewAction="HandleNewAction"
    Columns="@definicionColumnas">
    </QueryTable>

    -->


    <div class="mx-6 mt-6 px-6">
        <QueryTable TItem="Cliente"
        Titulo="Lista de Clientes"
        Elementos="@clientes"
        TamanoPagina="5"
        AlEliminarMasivo="EliminarSeleccionados"
        BusquedaHabilitada="true"
        Ordenable="true"
        AccesorEstado="Estado"
        EtiquetaNoEncontrado="No se encontraron clientes"
        Cargando="@loading"
        AlSeleccionar="HandleSelectAction"
        AlEliminar="HandleDeleteAction"
        AlNuevo="HandleNewAction"
        AlCambiarEstado="HandleStatus"
        Columnas="@definicionColumnas">
        </QueryTable>

    </div>
</div>


@code {
    private DateTime? fechaNacimiento;
    private string? PlanSeleccionado;
    private string? Error;
    public bool AceptaTerminos = true;

    private List<Cliente> clientes = new List<Cliente>();
    private bool loading = true;

    private List<QueryTable<Cliente>.DefinicionColumna> definicionColumnas;

    protected override async Task OnInitializedAsync()
    {
        // Definir las columnas que se mostrarán en la tabla
        definicionColumnas = new List<QueryTable<Cliente>.DefinicionColumna>
        {
            new QueryTable<Cliente>.DefinicionColumna { Encabezado = "ID", Accesor = "Id" },
            new QueryTable<Cliente>.DefinicionColumna { Encabezado = "Nombre", Accesor = "Nombre" },
            new QueryTable<Cliente>.DefinicionColumna { Encabezado = "Email", Accesor = "Email" },
            new QueryTable<Cliente>.DefinicionColumna { Encabezado = "Tipo Cliente", Accesor = "TipoCliente" },
             new QueryTable<Cliente>.DefinicionColumna { Encabezado = "Estado", Accesor = "Estado" }
        };

        clientes = new List<Cliente>
            {
            new Cliente { Id = 1, Nombre = "Juan Pérez", Email = "juan@ejemplo.com", TipoCliente = "Regular", Estado = "A" },
            new Cliente { Id = 2, Nombre = "Ana Gómez", Email = "ana@ejemplo.com", TipoCliente = "VIP", Estado = "I" },
            new Cliente { Id = 3, Nombre = "Carlos Sánchez", Email = "carlos@ejemplo.com", TipoCliente = "Regular", Estado = "A" },
            new Cliente { Id = 4, Nombre = "Carlos Sánchez", Email = "carlos@ejemplo.com", TipoCliente = "Regular", Estado = "A" },
            new Cliente { Id = 5, Nombre = "Carlos Sánchez", Email = "carlos@ejemplo.com", TipoCliente = "Regular", Estado = "A" },
            new Cliente { Id = 6, Nombre = "Carlos Sánchez", Email = "carlos@ejemplo.com", TipoCliente = "Regular", Estado = "A" },
            new Cliente { Id = 7, Nombre = "Carlos Sánchez", Email = "carlos@ejemplo.com", TipoCliente = "Regular", Estado = "A" },
            new Cliente { Id = 8, Nombre = "Carlos Sánchez", Email = "carlos@ejemplo.com", TipoCliente = "Regular", Estado = "A" },
            new Cliente { Id = 9, Nombre = "Carlos Sánchez", Email = "carlos@ejemplo.com", TipoCliente = "Regular", Estado = "A" },
            new Cliente { Id = 10, Nombre = "Juan Pérez", Email = "juan@ejemplo.com", TipoCliente = "Regular", Estado = "A" },
            new Cliente { Id = 11, Nombre = "Ana Gómez", Email = "ana@ejemplo.com", TipoCliente = "VIP", Estado = "I" },
            new Cliente { Id = 12, Nombre = "Carlos Sánchez", Email = "carlos@ejemplo.com", TipoCliente = "Regular", Estado = "A" },
            new Cliente { Id = 13, Nombre = "Carlos Sánchez", Email = "carlos@ejemplo.com", TipoCliente = "Regular", Estado = "A" },
            new Cliente { Id = 14, Nombre = "Carlos Sánchez", Email = "carlos@ejemplo.com", TipoCliente = "Regular", Estado = "A" },
            new Cliente { Id = 15, Nombre = "Carlos Sánchez", Email = "carlos@ejemplo.com", TipoCliente = "Regular", Estado = "A" },
            new Cliente { Id = 16, Nombre = "Carlos Sánchez", Email = "carlos@ejemplo.com", TipoCliente = "Regular", Estado = "A" },
            new Cliente { Id = 17, Nombre = "Carlos Sánchez", Email = "carlos@ejemplo.com", TipoCliente = "Regular", Estado = "A" },
            new Cliente { Id = 18, Nombre = "Carlos Sánchez", Email = "carlos@ejemplo.com", TipoCliente = "Regular", Estado = "A" }
            };
        loading = false;
    }

    private async Task EliminarSeleccionados(List<Cliente> seleccionados)
    {
        foreach (var cliente in seleccionados)
        {

        }
    }

    private void HandleStatus((Cliente cliente, string status) datos)
    {
        Console.WriteLine($"El estado del cliente {datos.cliente.Nombre} cambió a {datos.status}");
    }


    private void HandleSelectAction(Cliente cliente)
    {
        // Lógica para editar un cliente
        Console.WriteLine($"Editar cliente {cliente.Nombre}");
    }

    private void HandleDeleteAction(Cliente cliente)
    {
        // Lógica para eliminar un cliente
        Console.WriteLine($"Eliminar cliente {cliente.Nombre}");
    }

    private void HandleNewAction()
    {
        // Lógica para agregar un nuevo cliente
        Console.WriteLine("Agregar nuevo cliente");
    }


    public class Cliente
    {
        public int Id { get; set; }
        public string Nombre { get; set; }
        public string Email { get; set; }
        public string TipoCliente { get; set; }
        public string Estado { get; set; }
    }





}
